{"content": {"suites": {"0": {"status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_all_fields", "rerun": "0"}}, "suite_name": "tests/question_tests/test_college_create_as_admin.py"}, "1": {"suite_name": "tests/question_tests/test_mathworld_create_as_admin.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_all_fields", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "tests/question_tests/test_staar_create_as_admin.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_all_fields", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_blank_question_type", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_invalid_question_type_mathworld", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_question_type_blank_char", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_question_type_college_level", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_question_type_numeric", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_question_type_special_char", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_0", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_13", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_12", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_3", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_12", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_13", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_0", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_grade_level_str_3", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_grade_level_str_12", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_grade_level_blank", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_1", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_grade_level_special_char", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_grade_level_blank_str", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_release_date_current", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_release_date_future", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_release_date_past", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_release_date_mm_yyyy", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_release_date_mmyyyy", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_release_date_mm_bs_yyyy", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_release_date_yyyy_bs_mm", "rerun": "0"}, "27": {"status": "PASS", "message": "", "test_name": "test_release_date_blank", "rerun": "0"}, "28": {"status": "PASS", "message": "", "test_name": "test_release_date_invalid_month", "rerun": "0"}, "29": {"status": "PASS", "message": "", "test_name": "test_release_date_leap_year", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_release_date_leap_year_with_day", "rerun": "0"}, "31": {"status": "PASS", "message": "", "test_name": "test_release_date_invalid_leap_year", "rerun": "0"}, "32": {"status": "PASS", "message": "", "test_name": "test_release_date_blank_char", "rerun": "0"}, "33": {"status": "PASS", "message": "", "test_name": "test_release_date_malformed", "rerun": "0"}, "34": {"status": "PASS", "message": "", "test_name": "test_release_date_missing", "rerun": "0"}, "35": {"status": "PASS", "message": "", "test_name": "test_release_date_us_format", "rerun": "0"}, "36": {"status": "PASS", "message": "", "test_name": "test_question_type_missing", "rerun": "0"}, "37": {"status": "PASS", "message": "", "test_name": "test_grade_level_missing", "rerun": "0"}, "38": {"status": "PASS", "message": "", "test_name": "test_release_date_numeric", "rerun": "0"}, "39": {"status": "PASS", "message": "", "test_name": "test_category_numeric", "rerun": "0"}, "40": {"status": "PASS", "message": "", "test_name": "test_category_numeric_string", "rerun": "0"}, "41": {"status": "PASS", "message": "", "test_name": "test_category_missing", "rerun": "0"}, "42": {"status": "PASS", "message": "", "test_name": "test_category_eq_math", "rerun": "0"}, "43": {"status": "PASS", "message": "", "test_name": "test_category_eq_science", "rerun": "0"}, "44": {"status": "PASS", "message": "", "test_name": "test_category_eq_english", "rerun": "0"}, "45": {"status": "PASS", "message": "", "test_name": "test_category_eq_blank", "rerun": "0"}, "46": {"status": "PASS", "message": "", "test_name": "test_category_eq_blank_char", "rerun": "0"}, "47": {"status": "PASS", "message": "", "test_name": "test_category_eq_special_char", "rerun": "0"}, "48": {"status": "PASS", "message": "", "test_name": "test_category_eq_neg_num", "rerun": "0"}, "49": {"status": "PASS", "message": "", "test_name": "test_keywords_list_strings", "rerun": "0"}, "50": {"status": "FAIL", "message": "   AssertionError: assert 'a value in k...t be a string' == 'all values i...ust be string'\n     - all values in keywords must be string\n     ?  --      -\n     + a value in keywords must be a string\n     ?                            ++\n", "test_name": "test_keywords_list_alpha_num", "rerun": "0"}, "51": {"status": "PASS", "message": "", "test_name": "test_keywords_list_special_char", "rerun": "0"}, "52": {"status": "PASS", "message": "", "test_name": "test_keywords_empty_list", "rerun": "0"}, "53": {"status": "PASS", "message": "", "test_name": "test_keywords_missing", "rerun": "0"}, "54": {"status": "FAIL", "message": "   AssertionError: assert 'a value in k...t be a string' == 'all values i...ust be string'\n     - all values in keywords must be string\n     ?  --      -\n     + a value in keywords must be a string\n     ?                            ++\n", "test_name": "test_keywords_all_num", "rerun": "0"}, "55": {"status": "PASS", "message": "", "test_name": "test_keywords_blank_entry", "rerun": "0"}, "56": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' != 'Invalid JSON'\n", "test_name": "test_keywords_long_value", "rerun": "0"}, "57": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' != 'Invalid JSON'\n", "test_name": "test_keywords_list_50_value", "rerun": "0"}, "58": {"status": "PASS", "message": "", "test_name": "test_student_expectations_num_str", "rerun": "0"}, "59": {"status": "PASS", "message": "", "test_name": "test_student_expectations_special_char", "rerun": "0"}, "60": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_str_num", "rerun": "0"}, "61": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s...t be a string' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + a value in student_expectations must be a string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_num_num", "rerun": "0"}, "62": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + Invalid JSON\n", "test_name": "test_student_expectations_list_str_spec_char", "rerun": "0"}, "63": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s...t be a string' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + a value in student_expectations must be a string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_num_str", "rerun": "0"}, "64": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_empty", "rerun": "0"}, "65": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_missing", "rerun": "0"}, "66": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s... empty string' == 'student_expe... empty string'\n     - student_expectations should not be an empty string\n     + a value in student_expectations should not be an empty string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_blank_strs", "rerun": "0"}, "67": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s... empty string' == 'student_expe... empty string'\n     - student_expectations should not be an empty string\n     + a value in student_expectations should not be an empty string\n     ? +++++++++++\n", "test_name": "test_response_type_blank", "rerun": "0"}, "68": {"status": "FAIL", "message": "   AssertionError: assert 'invalid response type' == 'response_typ... empty string'\n     - response_type should not be an empty string\n     + invalid response type\n", "test_name": "test_response_type_blank_char", "rerun": "0"}, "69": {"status": "PASS", "message": "", "test_name": "test_response_type_missing", "rerun": "0"}, "70": {"status": "PASS", "message": "", "test_name": "test_response_type_not_ore", "rerun": "0"}, "71": {"status": "PASS", "message": "", "test_name": "test_response_type_is_ore", "rerun": "0"}, "72": {"status": "PASS", "message": "", "test_name": "test_response_type_is_ror", "rerun": "0"}, "73": {"status": "PASS", "message": "", "test_name": "test_response_type_not_ror", "rerun": "0"}, "74": {"status": "PASS", "message": "", "test_name": "test_response_type__mc", "rerun": "0"}, "75": {"status": "PASS", "message": "", "test_name": "test_response_type__not_mc", "rerun": "0"}, "76": {"status": "PASS", "message": "", "test_name": "test_response_type_cb", "rerun": "0"}, "77": {"status": "PASS", "message": "", "test_name": "test_response_type_not_cb", "rerun": "0"}, "78": {"status": "PASS", "message": "", "test_name": "test_response_type_numeric", "rerun": "0"}, "79": {"status": "PASS", "message": "", "test_name": "test_response_type_spec_char", "rerun": "0"}, "80": {"status": "PASS", "message": "", "test_name": "test_question_conent", "rerun": "0"}, "81": {"status": "PASS", "message": "", "test_name": "test_question_content_blank", "rerun": "0"}, "82": {"status": "PASS", "message": "", "test_name": "test_question_content_missing", "rerun": "0"}, "83": {"status": "PASS", "message": "", "test_name": "test_question_content_lines_10", "rerun": "0"}, "84": {"status": "PASS", "message": "", "test_name": "test_question_content_1000_char", "rerun": "0"}, "85": {"status": "PASS", "message": "", "test_name": "test_question_content_999_char", "rerun": "0"}, "86": {"status": "PASS", "message": "", "test_name": "test_question_content_1001_char", "rerun": "0"}, "87": {"status": "PASS", "message": "", "test_name": "test_question_content_blank_chars", "rerun": "0"}, "88": {"status": "PASS", "message": "", "test_name": "test_question_content_numeric", "rerun": "0"}, "89": {"status": "PASS", "message": "", "test_name": "test_question_content_spec_char", "rerun": "0"}, "90": {"status": "PASS", "message": "", "test_name": "test_question_img", "rerun": "0"}, "91": {"status": "PASS", "message": "", "test_name": "test_question_img_missing", "rerun": "0"}, "92": {"status": "PASS", "message": "", "test_name": "test_question_img_blank_char", "rerun": "0"}, "93": {"status": "PASS", "message": "", "test_name": "test_question_img_numeric", "rerun": "0"}, "94": {"status": "PASS", "message": "", "test_name": "test_options_single", "rerun": "0"}, "95": {"status": "PASS", "message": "", "test_name": "test_options_group_10", "rerun": "0"}, "96": {"status": "PASS", "message": "", "test_name": "test_options_group_60", "rerun": "0"}, "97": {"status": "PASS", "message": "", "test_name": "test_options_letter_blank", "rerun": "0"}, "98": {"status": "PASS", "message": "", "test_name": "test_options_content_blank", "rerun": "0"}, "99": {"status": "PASS", "message": "", "test_name": "test_options_image_blank", "rerun": "0"}, "100": {"status": "PASS", "message": "", "test_name": "test_options_unit_blank", "rerun": "0"}, "101": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_numeric", "rerun": "0"}, "102": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_blank_str", "rerun": "0"}, "103": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_true", "rerun": "0"}, "104": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_false", "rerun": "0"}, "105": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_both_missing", "rerun": "0"}, "106": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_single_missing", "rerun": "0"}, "107": {"status": "FAIL", "message": "   assert 201 == 400\n    +  where 201 = <Response [201]>.status_code\n", "test_name": "test_options_unit_missing", "rerun": "0"}, "108": {"status": "PASS", "message": "", "test_name": "test_options_content_1000_char", "rerun": "0"}, "109": {"status": "PASS", "message": "", "test_name": "test_options_invalid_option_image", "rerun": "0"}, "110": {"status": "PASS", "message": "", "test_name": "test_options_invalid_question_image", "rerun": "0"}, "111": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_True", "rerun": "0"}, "112": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_False", "rerun": "0"}}, "status": {"total_pass": 102, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 11, "total_error": 0}}, "3": {"suite_name": "tests/question_tests/test_staar_create_as_staff.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_all_fields", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_blank_question_type", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_invalid_question_type_mathworld", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_question_type_blank_char", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_question_type_college_level", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_question_type_numeric", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_question_type_special_char", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_0", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_13", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_12", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_3", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_12", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_13", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_neg_0", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_grade_level_str_3", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_grade_level_str_12", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_grade_level_blank", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_grade_level_eq_1", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_grade_level_special_char", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_grade_level_blank_str", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_release_date_current", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_release_date_future", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_release_date_past", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_release_date_mm_yyyy", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_release_date_mmyyyy", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_release_date_mm_bs_yyyy", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_release_date_yyyy_bs_mm", "rerun": "0"}, "27": {"status": "PASS", "message": "", "test_name": "test_release_date_blank", "rerun": "0"}, "28": {"status": "PASS", "message": "", "test_name": "test_release_date_invalid_month", "rerun": "0"}, "29": {"status": "PASS", "message": "", "test_name": "test_release_date_leap_year", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_release_date_leap_year_with_day", "rerun": "0"}, "31": {"status": "PASS", "message": "", "test_name": "test_release_date_invalid_leap_year", "rerun": "0"}, "32": {"status": "PASS", "message": "", "test_name": "test_release_date_blank_char", "rerun": "0"}, "33": {"status": "PASS", "message": "", "test_name": "test_release_date_malformed", "rerun": "0"}, "34": {"status": "PASS", "message": "", "test_name": "test_release_date_missing", "rerun": "0"}, "35": {"status": "PASS", "message": "", "test_name": "test_release_date_us_format", "rerun": "0"}, "36": {"status": "PASS", "message": "", "test_name": "test_question_type_missing", "rerun": "0"}, "37": {"status": "PASS", "message": "", "test_name": "test_grade_level_missing", "rerun": "0"}, "38": {"status": "PASS", "message": "", "test_name": "test_release_date_numeric", "rerun": "0"}, "39": {"status": "PASS", "message": "", "test_name": "test_category_numeric", "rerun": "0"}, "40": {"status": "PASS", "message": "", "test_name": "test_category_numeric_string", "rerun": "0"}, "41": {"status": "PASS", "message": "", "test_name": "test_category_missing", "rerun": "0"}, "42": {"status": "PASS", "message": "", "test_name": "test_category_eq_math", "rerun": "0"}, "43": {"status": "PASS", "message": "", "test_name": "test_category_eq_science", "rerun": "0"}, "44": {"status": "PASS", "message": "", "test_name": "test_category_eq_english", "rerun": "0"}, "45": {"status": "PASS", "message": "", "test_name": "test_category_eq_blank", "rerun": "0"}, "46": {"status": "PASS", "message": "", "test_name": "test_category_eq_blank_char", "rerun": "0"}, "47": {"status": "PASS", "message": "", "test_name": "test_category_eq_special_char", "rerun": "0"}, "48": {"status": "PASS", "message": "", "test_name": "test_category_eq_neg_num", "rerun": "0"}, "49": {"status": "PASS", "message": "", "test_name": "test_keywords_list_strings", "rerun": "0"}, "50": {"status": "FAIL", "message": "   AssertionError: assert 'a value in k...t be a string' == 'all values i...ust be string'\n     - all values in keywords must be string\n     ?  --      -\n     + a value in keywords must be a string\n     ?                            ++\n", "test_name": "test_keywords_list_alpha_num", "rerun": "0"}, "51": {"status": "PASS", "message": "", "test_name": "test_keywords_list_special_char", "rerun": "0"}, "52": {"status": "PASS", "message": "", "test_name": "test_keywords_empty_list", "rerun": "0"}, "53": {"status": "PASS", "message": "", "test_name": "test_keywords_missing", "rerun": "0"}, "54": {"status": "FAIL", "message": "   AssertionError: assert 'a value in k...t be a string' == 'all values i...ust be string'\n     - all values in keywords must be string\n     ?  --      -\n     + a value in keywords must be a string\n     ?                            ++\n", "test_name": "test_keywords_all_num", "rerun": "0"}, "55": {"status": "PASS", "message": "", "test_name": "test_keywords_blank_entry", "rerun": "0"}, "56": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' != 'Invalid JSON'\n", "test_name": "test_keywords_long_value", "rerun": "0"}, "57": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' != 'Invalid JSON'\n", "test_name": "test_keywords_list_50_value", "rerun": "0"}, "58": {"status": "PASS", "message": "", "test_name": "test_student_expectations_num_str", "rerun": "0"}, "59": {"status": "PASS", "message": "", "test_name": "test_student_expectations_special_char", "rerun": "0"}, "60": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_str_num", "rerun": "0"}, "61": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s...t be a string' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + a value in student_expectations must be a string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_num_num", "rerun": "0"}, "62": {"status": "FAIL", "message": "   AssertionError: assert 'Invalid JSON' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + Invalid JSON\n", "test_name": "test_student_expectations_list_str_spec_char", "rerun": "0"}, "63": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s...t be a string' == 'student_expe...t be a string'\n     - student_expectations must be a string\n     + a value in student_expectations must be a string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_num_str", "rerun": "0"}, "64": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_empty", "rerun": "0"}, "65": {"status": "PASS", "message": "", "test_name": "test_student_expectations_list_missing", "rerun": "0"}, "66": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s... empty string' == 'student_expe... empty string'\n     - student_expectations should not be an empty string\n     + a value in student_expectations should not be an empty string\n     ? +++++++++++\n", "test_name": "test_student_expectations_list_blank_strs", "rerun": "0"}, "67": {"status": "FAIL", "message": "   AssertionError: assert 'a value in s... empty string' == 'student_expe... empty string'\n     - student_expectations should not be an empty string\n     + a value in student_expectations should not be an empty string\n     ? +++++++++++\n", "test_name": "test_response_type_blank", "rerun": "0"}, "68": {"status": "FAIL", "message": "   AssertionError: assert 'invalid response type' == 'response_typ... empty string'\n     - response_type should not be an empty string\n     + invalid response type\n", "test_name": "test_response_type_blank_char", "rerun": "0"}, "69": {"status": "PASS", "message": "", "test_name": "test_response_type_missing", "rerun": "0"}, "70": {"status": "PASS", "message": "", "test_name": "test_response_type_not_ore", "rerun": "0"}, "71": {"status": "PASS", "message": "", "test_name": "test_response_type_is_ore", "rerun": "0"}, "72": {"status": "PASS", "message": "", "test_name": "test_response_type_is_ror", "rerun": "0"}, "73": {"status": "PASS", "message": "", "test_name": "test_response_type_not_ror", "rerun": "0"}, "74": {"status": "PASS", "message": "", "test_name": "test_response_type__mc", "rerun": "0"}, "75": {"status": "PASS", "message": "", "test_name": "test_response_type__not_mc", "rerun": "0"}, "76": {"status": "PASS", "message": "", "test_name": "test_response_type_cb", "rerun": "0"}, "77": {"status": "PASS", "message": "", "test_name": "test_response_type_not_cb", "rerun": "0"}, "78": {"status": "PASS", "message": "", "test_name": "test_response_type_numeric", "rerun": "0"}, "79": {"status": "PASS", "message": "", "test_name": "test_response_type_spec_char", "rerun": "0"}, "80": {"status": "PASS", "message": "", "test_name": "test_question_conent", "rerun": "0"}, "81": {"status": "PASS", "message": "", "test_name": "test_question_content_blank", "rerun": "0"}, "82": {"status": "PASS", "message": "", "test_name": "test_question_content_missing", "rerun": "0"}, "83": {"status": "PASS", "message": "", "test_name": "test_question_content_lines_10", "rerun": "0"}, "84": {"status": "PASS", "message": "", "test_name": "test_question_content_1000_char", "rerun": "0"}, "85": {"status": "PASS", "message": "", "test_name": "test_question_content_999_char", "rerun": "0"}, "86": {"status": "PASS", "message": "", "test_name": "test_question_content_1001_char", "rerun": "0"}, "87": {"status": "PASS", "message": "", "test_name": "test_question_content_blank_chars", "rerun": "0"}, "88": {"status": "PASS", "message": "", "test_name": "test_question_content_numeric", "rerun": "0"}, "89": {"status": "PASS", "message": "", "test_name": "test_question_content_spec_char", "rerun": "0"}, "90": {"status": "PASS", "message": "", "test_name": "test_question_img", "rerun": "0"}, "91": {"status": "PASS", "message": "", "test_name": "test_question_img_missing", "rerun": "0"}, "92": {"status": "PASS", "message": "", "test_name": "test_question_img_blank_char", "rerun": "0"}, "93": {"status": "PASS", "message": "", "test_name": "test_question_img_numeric", "rerun": "0"}, "94": {"status": "PASS", "message": "", "test_name": "test_options_single", "rerun": "0"}, "95": {"status": "PASS", "message": "", "test_name": "test_options_group_10", "rerun": "0"}, "96": {"status": "PASS", "message": "", "test_name": "test_options_group_60", "rerun": "0"}, "97": {"status": "PASS", "message": "", "test_name": "test_options_letter_blank", "rerun": "0"}, "98": {"status": "PASS", "message": "", "test_name": "test_options_content_blank", "rerun": "0"}, "99": {"status": "PASS", "message": "", "test_name": "test_options_image_blank", "rerun": "0"}, "100": {"status": "PASS", "message": "", "test_name": "test_options_unit_blank", "rerun": "0"}, "101": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_numeric", "rerun": "0"}, "102": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_blank_str", "rerun": "0"}, "103": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_true", "rerun": "0"}, "104": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_false", "rerun": "0"}, "105": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_both_missing", "rerun": "0"}, "106": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_single_missing", "rerun": "0"}, "107": {"status": "FAIL", "message": "   assert 201 == 400\n    +  where 201 = <Response [201]>.status_code\n", "test_name": "test_options_unit_missing", "rerun": "0"}, "108": {"status": "PASS", "message": "", "test_name": "test_options_content_1000_char", "rerun": "0"}, "109": {"status": "PASS", "message": "", "test_name": "test_options_invalid_option_image", "rerun": "0"}, "110": {"status": "PASS", "message": "", "test_name": "test_options_invalid_question_image", "rerun": "0"}, "111": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_True", "rerun": "0"}, "112": {"status": "PASS", "message": "", "test_name": "test_options_is_answer_False", "rerun": "0"}}, "status": {"total_pass": 102, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 11, "total_error": 0}}}}, "date": "July 13, 2023", "start_time": 1689297174.8418312, "total_suite": 4, "status": "FAIL", "status_list": {"pass": "206", "fail": "22", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "228"}